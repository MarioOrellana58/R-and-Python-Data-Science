library(DBI)
con <- dbConnect(odbc::odbc(), .connection_string = "Driver={SQL Server};", timeout = 10)
con <- dbConnect(odbc::odbc(), .connection_string = "Driver={SQL Server};", timeout = 10)
library(DBI)
con <- dbConnect(odbc::odbc(), "VIPDATA")
library(DBI)
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server="LAPTOP-MHM32UUF", Database = "Admisiones_DWH", User="mario", Password = "Patronus58*", timeout = 10)
getwd()
? cars
clear
clear()
clean
clean()
install.packages("dplyr")
install.packages("ggplot2")
library(ggplot2)
library(dplyr)
library(DBI)
ObjetoCadena <- "Esta es una cadena"
ObjetoEntero <- 2
ObjetoVector <- c(1:5) #concatenar todos los números del 1 al 5
str(ObjetoCadena)
str(ObjetoCadena)
str(ObjetoEntero)
str(ObjetoVector)
str(ObjetoCadena)
str(ObjetoEntero)
str(ObjetoVector)
typeof(ObjetoCadena)
typeof(ObjetoEntero)
typeof(ObjetoVector)
class(ObjetoCadena)
class(ObjetoEntero)
class(ObjetoVector)
Temperaturas <- data.frame(#se le mandan listas de parámetros
Anios=c(2015,2016,2017,2018),
Invierno=c(5,8,7,10),
Primavera=c(10,12,15,13),
Verano=c(25,26,29,32),
Otonio=c(13,14,12,10)
)
str(Temperaturas)
class(Temperatura)
class(Temperaturas)
Temperaturas
Temperaturas$Verano
View(Temperaturas)
View(Temperaturas)
Temperaturas$Verano
head(Temperaturas,2)
tail(Temperaturas,2)
typeof(ObjetoEntero)
Temperaturas %>% filter(Anios==2018)
Temperaturas %>% slice(1:2)
Temperaturas %>% arrange(Invierno)
TemperaturasRandom <- data.frame(#se le mandan listas de parámetros
Anios=(sample(c(2015:2018),20,repleace=TRUE)),
Invierno=rnorm(20, mean=2, sd=2),
Primavera=rnorm(20, mean=15, sd=3),
Verano=rnorm(20, mean=22, sd=4),
Otonio=rnorm(20, mean=10, sd=2),
)
TemperaturasRandom <- data.frame(#se le mandan listas de parámetros
Anios=(sample(c(2015:2018),20,replace=TRUE)),
Invierno=rnorm(20, mean=2, sd=2),
Primavera=rnorm(20, mean=15, sd=3),
Verano=rnorm(20, mean=22, sd=4),
Otonio=rnorm(20, mean=10, sd=2),
)
TemperaturasRandom <- data.frame(
Anios=(sample(c(2015:2018),20,replace=TRUE)),
Invierno=rnorm(20, mean=2, sd=2),
Primavera=rnorm(20, mean=15, sd=3),
Verano=rnorm(20, mean=22, sd=4),
Otonio=rnorm(20, mean=10, sd=2),
)
TemperaturasRandom <- data.frame(
Anios=(sample(c(2015:2018),20,replace=TRUE)),
Invierno=rnorm(20, mean=2, sd=2),
Primavera=rnorm(20, mean=15, sd=3),
Verano=rnorm(20, mean=22, sd=4),
Otonio=rnorm(20, mean=10, sd=2)
)
View(TemperaturasRandom)
View(TemperaturasRandom)
TemperaturasRandom %>% group_by(Anios) %>% summarise(TemperaturaPromdio = mean(Invierno))
TemperaturasRandom %>% slice(1:5) %>% group_by(Anios) %>% summarise(TemperaturaPromdio = mean(Invierno))
TemperaturasRandomPromedio <-  TemperaturasRandom %>% group_by(Anios) %>% summarise(TemperaturaPromedio = mean(Invierno))
#aes = aesynthetics, es la definición del plano cartesiano
#geom line = gráfico de líneas
#geom text = solo añade data labels
ggplot(data=TemperaturasRandomPromedio, aes(x=Anio,y=TemperaturaPromedio)) +
geom_line() +
geom_text(
label=TemperaturasRandomPromedio$TemperaturaPromedio,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T
)
TemperaturasRandomPromedio <-  TemperaturasRandom %>% group_by(Anios) %>% summarise(TemperaturaPromedio = mean(Invierno))
#aes = aesynthetics, es la definición del plano cartesiano
#geom line = gráfico de líneas
#geom text = solo añade data labels
ggplot(data=TemperaturasRandomPromedio, aes(x=Anios,y=TemperaturaPromedio)) +
geom_line() +
geom_text(
label=TemperaturasRandomPromedio$TemperaturaPromedio,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T
)
TemperaturasRandomPromedio
View(TemperaturasRandomPromedio)
View(TemperaturasRandomPromedio)
TemperaturasRandom %>% slice(1:5) %>% group_by(Anios) %>% summarise(TemperaturaPromedio = mean(Invierno))
dfsql <- dbGetQuery(conn=con, "SELECT e.*, c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera")
dfsql <- dbGetQuery(conn=con, "SELECT e.*, c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
View(con)
View(dfsql)
Df_ConteoPorFacultad <- dfsql %>% count(NombreFacultad)
ggplot(Df_ConteoPorFacultad, aes(x="",y=n, fill=NombreFacultad)) +
geom_bar(stat="identity", width = 1) +
coord_polar("y", start = 0)
dfsql <- dbGetQuery(conn=con, "SELECT e.*, c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
library(ggplot2)
library(dplyr)
library(DBI)
library(odbc)
library(odbc)
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server = "LAPTOP-MHM32UUF",
Database = "Admisiones_DWH", User = "mario", Password = "Patronus58*",
timeout = 10)
dfsql <- dbGetQuery(conn=con, "SELECT e.*, c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
dfsql <- dbGetQuery(conn=con, "SELECT e.*, c.NombreFacultad
FROM dbo E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
dfsql <- dbGetQuery(conn=con, "SELECT e.*, c.NombreFacultad
FROM dbo.Examen E INNER JOIN
dbo.Carrera c on (e.sk_carrera = c.sk_carrera)")
dfsql <- dbGetQuery(conn=con, "SELECT e.*, c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
Df_ConteoPorFacultad <- dfsql %>% count(NombreFacultad)
ggplot(Df_ConteoPorFacultad, aes(x="",y=n, fill=NombreFacultad)) +
geom_bar(stat="identity", width = 1) +
coord_polar("y", start = 0)
dfsql <- dbGetQuery(conn=con, "SELECT e.*, c.NombreFacultad
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
ggplot(Df_ConteoPorFacultad, aes(x="",y=n, fill=NombreFacultad)) +
geom_bar(stat="identity", width = 1) +
coord_polar("y", start = 0)
dfsql <- dbGetQuery(conn=con, "SELECT e.*, c.*
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
View(dfsql)
rm(dfsql)
dfsql <- dbGetQuery(conn=con, "SELECT e.*, c.*
FROM Fact.Examen E INNER JOIN
Dimension.Carrera c on (e.sk_carrera = c.sk_carrera)")
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server = "LAPTOP-MHM32UUF",
Database = "Admisiones_DWH", User = "mario", Password = "Patronus58*",
timeout = 10)
library(ggplot2)
library(dplyr)
library(DBI)
library(odbc)
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server = "LAPTOP-MHM32UUF",
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server = "LAPTOP-MHM32UUF",
Database = "Admisiones_DWH", User = "mario", Password = "Patronus58*",
timeout = 10)
con <- dbConnect(odbc(), Driver = "SQL Server", Server = "LAPTOP-MHM32UUF", Database = "Admisiones_DWH")
library(ggplot2)
library(dplyr)
library(DBI)
library(odbc)
con <- dbConnect(odbc(), Driver = "SQL Server", Server = "LAPTOP-MHM32UUF", Database = "Admisiones_DWH")
con <- dbConnect(odbc(), Driver = "SQL Server", Server = "LAPTOP-MHM32UUF",
Database = "Admisiones_DWH")
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server="LAPTOP-MHM32UUF", Database = "Admisiones_DWH", User="mario", Password = "Patronus58*", timeout = 10)
